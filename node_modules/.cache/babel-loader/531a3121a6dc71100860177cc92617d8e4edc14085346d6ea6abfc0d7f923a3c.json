{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amyho\\\\OneDrive\\\\Desktop\\\\school\\\\Amy-Fouzia\\\\amy-fouzia\\\\src\\\\ThreeScene.js\",\n  _s = $RefreshSig$();\n// ThreeScene.js\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const sceneRef = useRef();\n  useEffect(() => {\n    // Set up the scene\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n\n    // Create a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Position the camera\n    camera.position.z = 5;\n\n    // Set up the renderer\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    sceneRef.current.appendChild(renderer.domElement);\n\n    // Handle window resize\n    const handleResize = () => {\n      const newWidth = window.innerWidth;\n      const newHeight = window.innerHeight;\n      camera.aspect = newWidth / newHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(newWidth, newHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Handle scroll\n    const handleScroll = () => {\n      // Access the scroll position using window.scrollY or another method\n      // Adjust the 3D scene based on the scroll position\n      // For example, you can update cube.rotation based on scroll position\n      const scrollPosition = window.scrollY;\n\n      // Update cube rotation\n      cube.rotation.x = scrollPosition * 0.001;\n      cube.rotation.y = scrollPosition * 0.001;\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Render the scene\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sceneRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: -1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeScene, \"JWNkVvqDwC3Xj+XwVC/OSsWa/OI=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","ThreeScene","_s","sceneRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","setSize","current","appendChild","domElement","handleResize","newWidth","newHeight","aspect","updateProjectionMatrix","addEventListener","handleScroll","scrollPosition","scrollY","rotation","x","y","animate","requestAnimationFrame","render","removeEventListener","ref","style","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amyho/OneDrive/Desktop/school/Amy-Fouzia/amy-fouzia/src/ThreeScene.js"],"sourcesContent":["// ThreeScene.js\r\nimport React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst ThreeScene = () => {\r\n  const sceneRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Set up the scene\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n\r\n    // Create a cube\r\n    const geometry = new THREE.BoxGeometry();\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n    // Position the camera\r\n    camera.position.z = 5;\r\n\r\n    // Set up the renderer\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    sceneRef.current.appendChild(renderer.domElement);\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      const newWidth = window.innerWidth;\r\n      const newHeight = window.innerHeight;\r\n\r\n      camera.aspect = newWidth / newHeight;\r\n      camera.updateProjectionMatrix();\r\n\r\n      renderer.setSize(newWidth, newHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Handle scroll\r\n    const handleScroll = () => {\r\n      // Access the scroll position using window.scrollY or another method\r\n      // Adjust the 3D scene based on the scroll position\r\n      // For example, you can update cube.rotation based on scroll position\r\n      const scrollPosition = window.scrollY;\r\n\r\n      // Update cube rotation\r\n      cube.rotation.x = scrollPosition * 0.001;\r\n      cube.rotation.y = scrollPosition * 0.001;\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n\r\n      // Render the scene\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={sceneRef} style={{ position: 'fixed', top: 0, left: 0, zIndex: -1 }} />;\r\n};\r\n\r\nexport default ThreeScene;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}